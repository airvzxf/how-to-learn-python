<map version="1.0.1">
<!-- To view this file, download free mind mapping software FreeMind from http://freemind.sourceforge.net -->
<node CREATED="1506199093389" ID="ID_1343528659" MODIFIED="1506480652374" TEXT="Python 3">
<font NAME="FreeMono" SIZE="24"/>
<node CREATED="1506199646301" ID="ID_1462227560" MODIFIED="1506479818067" POSITION="right" TEXT="Info">
<font NAME="FreeMono" SIZE="24"/>
<node CREATED="1506199649067" ID="ID_1744934445" MODIFIED="1506479818205" TEXT="Created by">
<font NAME="FreeMono" SIZE="24"/>
<node CREATED="1506199653158" ID="ID_156721189" MODIFIED="1506199865211" TEXT="Guido van Rossum">
<font NAME="FreeMono" SIZE="24"/>
</node>
</node>
<node CREATED="1506199702076" ID="ID_682480832" MODIFIED="1506479818206" TEXT="Release">
<font NAME="FreeMono" SIZE="24"/>
<node CREATED="1506199706870" ID="ID_1678855166" MODIFIED="1506199865210" STYLE="fork" TEXT="20 February 1991">
<edge COLOR="#808080" STYLE="bezier" WIDTH="thin"/>
<font NAME="FreeMono" SIZE="24"/>
</node>
</node>
</node>
<node CREATED="1506199402783" ID="ID_245689048" MODIFIED="1506479818073" POSITION="right" STYLE="fork" TEXT="Characteristic">
<font NAME="FreeMono" SIZE="24"/>
<node CREATED="1506199464642" ID="ID_640087824" MODIFIED="1506199865211" TEXT="High-level">
<font NAME="FreeMono" SIZE="24"/>
</node>
<node CREATED="1506199488672" ID="ID_1214617911" MODIFIED="1506199865211" TEXT="General propouse">
<font NAME="FreeMono" SIZE="24"/>
</node>
<node CREATED="1506199502473" ID="ID_1125565734" MODIFIED="1506479818211" TEXT="Programming Paradigmas">
<font NAME="FreeMono" SIZE="24"/>
<node CREATED="1506199515730" ID="ID_823571201" MODIFIED="1506199865211" TEXT="Functional">
<font NAME="FreeMono" SIZE="24"/>
</node>
<node CREATED="1506199518445" ID="ID_87608738" MODIFIED="1506199865211" TEXT="Structured">
<font NAME="FreeMono" SIZE="24"/>
</node>
<node CREATED="1506199525283" ID="ID_956453263" MODIFIED="1506199865211" TEXT="Object-Oriented">
<font NAME="FreeMono" SIZE="24"/>
</node>
<node CREATED="1506199537494" ID="ID_1732388135" MODIFIED="1506199865211" TEXT="Aspect-Oriented">
<font NAME="FreeMono" SIZE="24"/>
</node>
<node CREATED="1506199749655" ID="ID_884331719" MODIFIED="1506199865211" TEXT="Imperative">
<font NAME="FreeMono" SIZE="24"/>
</node>
<node CREATED="1506199821752" ID="ID_407443156" MODIFIED="1506199912888" TEXT="Procedural styles">
<font NAME="FreeMono" SIZE="24"/>
</node>
</node>
<node CREATED="1506200062366" ID="ID_375130829" MODIFIED="1506479818212" TEXT="Features">
<node CREATED="1506200069159" ID="ID_1309694460" MODIFIED="1506200171652" STYLE="fork" TEXT="Large and comprehensive standard library">
<edge COLOR="#808080" STYLE="bezier" WIDTH="thin"/>
<font NAME="FreeMono" SIZE="24"/>
</node>
<node CREATED="1506479902186" ID="ID_1154985249" MODIFIED="1506479903262" TEXT="Comprehensive and clear syntaxis"/>
</node>
</node>
<node CREATED="1506200279816" ID="ID_118804544" MODIFIED="1506479818081" POSITION="right" TEXT="Basic">
<node CREATED="1506200282379" ID="ID_592185709" MODIFIED="1506479818218" TEXT="Syntaxys">
<node CREATED="1506200301821" ID="ID_475883525" MODIFIED="1506200307501" TEXT="Reserve keywords"/>
<node CREATED="1506200315639" ID="ID_1540101847" MODIFIED="1506479818360" TEXT="Quotation marks">
<node CREATED="1506200327845" ID="ID_1345000403" MODIFIED="1506200332918" TEXT="Single &apos;"/>
<node CREATED="1506200597476" ID="ID_556472994" MODIFIED="1506200603473" TEXT="Double single &apos;&apos;"/>
<node CREATED="1506200333593" ID="ID_589824291" MODIFIED="1506200335986" TEXT="Double &quot;"/>
<node CREATED="1506200347997" ID="ID_1600772826" MODIFIED="1506200481650" TEXT="Triple single &apos;&apos;&apos;"/>
<node CREATED="1506200761394" ID="ID_1017357488" MODIFIED="1506200765682" TEXT="Triple double &quot;&quot;&quot; "/>
</node>
<node CREATED="1506200693891" ID="ID_1563516576" MODIFIED="1506200697456" TEXT="Statements"/>
<node CREATED="1506200663369" ID="ID_590561118" MODIFIED="1506200669568" TEXT="Multiline statements"/>
<node CREATED="1506200698200" ID="ID_517842469" MODIFIED="1506200703908" TEXT="Indentation"/>
<node CREATED="1506200711899" ID="ID_103532536" MODIFIED="1506200713852" TEXT="Comments"/>
<node CREATED="1506200721852" ID="ID_421719892" MODIFIED="1506479818362" TEXT="Docstrings">
<node CREATED="1506200482049" ID="ID_620409249" MODIFIED="1506200743266" TEXT="Triple double quotes &quot;&quot;&quot;"/>
</node>
</node>
<node CREATED="1506200791557" ID="ID_481012812" MODIFIED="1506479818223" TEXT="Variables">
<node CREATED="1506200822854" ID="ID_140247063" MODIFIED="1506200844314" TEXT="Flexible managment"/>
<node CREATED="1506200864147" ID="ID_1627421502" MODIFIED="1506479818363" TEXT="Multiple assigments in a multiple values in the statement">
<node CREATED="1506200895709" ID="ID_1781664882" MODIFIED="1506200905419" TEXT="a, b, c = 1, 2, 3"/>
</node>
<node CREATED="1506200924709" ID="ID_1606449583" MODIFIED="1506479818369" TEXT="Multiple assigments with one statement">
<node CREATED="1506200965854" ID="ID_747769551" MODIFIED="1506200975679" TEXT="a = b = c = 1"/>
</node>
<node CREATED="1506201021291" ID="ID_1381188965" MODIFIED="1506479818370" TEXT="Verify data type">
<node CREATED="1506200991445" ID="ID_1053116684" MODIFIED="1506201036565" TEXT="`type(variable)`"/>
</node>
<node CREATED="1506201085821" ID="ID_954668144" MODIFIED="1506479818375" TEXT="Data types">
<node CREATED="1506201091749" ID="ID_1686259993" MODIFIED="1506479818500" TEXT="Numbers">
<node CREATED="1506201118915" ID="ID_1736962866" MODIFIED="1506479818669" TEXT="Integer">
<node CREATED="1506201166935" ID="ID_794769207" MODIFIED="1506201169999" TEXT="Base 10"/>
<node CREATED="1506201170436" ID="ID_1350470147" MODIFIED="1506201181908" TEXT="Base 2: 0b101"/>
<node CREATED="1506201186354" ID="ID_1974954197" MODIFIED="1506201196314" TEXT="Base 8: 0c037"/>
<node CREATED="1506201201044" ID="ID_581736935" MODIFIED="1506201214832" TEXT="Base 16: 0xF4A"/>
<node CREATED="1506201227562" ID="ID_955311597" MODIFIED="1506479818821" TEXT="Convertions to string">
<node CREATED="1506201255193" ID="ID_96920017" MODIFIED="1506201314714" TEXT="Octal: oct(184)"/>
<node CREATED="1506201330317" ID="ID_98865059" MODIFIED="1506201338581" TEXT="Binary: bin(184)"/>
<node CREATED="1506201343702" ID="ID_954190364" MODIFIED="1506201353701" TEXT="Hexadecimal: hex(184)"/>
</node>
<node CREATED="1506201611053" ID="ID_741953779" MODIFIED="1506479818822" TEXT="Convertions">
<node CREATED="1506201614818" ID="ID_1216210555" MODIFIED="1506201655490" TEXT="Float: int(8.3)"/>
</node>
</node>
<node CREATED="1506201122059" ID="ID_1745088537" MODIFIED="1506479818671" TEXT="Float">
<node CREATED="1506201569351" ID="ID_1890741590" MODIFIED="1506479818823" TEXT="Convertions">
<node CREATED="1506201581485" ID="ID_629342265" MODIFIED="1506201684185" TEXT="Int: float(8)"/>
</node>
</node>
<node CREATED="1506201127628" ID="ID_376592102" MODIFIED="1506479818673" TEXT="Complex">
<node CREATED="1506201702129" ID="ID_1587444373" MODIFIED="1506479818824" TEXT="Example">
<node CREATED="1506201519719" ID="ID_219280614" MODIFIED="1506201542356" TEXT="y = 6 + 2j"/>
</node>
<node CREATED="1506201707529" ID="ID_832375457" MODIFIED="1506479818826" TEXT="Convertions">
<node CREATED="1506201711920" ID="ID_1120937831" MODIFIED="1506201748273" TEXT="Complex: complex(2.4)"/>
</node>
</node>
</node>
<node CREATED="1506201096299" ID="ID_78705188" MODIFIED="1506479818508" TEXT="Strings">
<node CREATED="1506201799241" ID="ID_421690240" MODIFIED="1506201805315" TEXT="Single or dobule quotes"/>
<node CREATED="1506201829458" ID="ID_788207880" MODIFIED="1506479818674" TEXT="Scape characters">
<node CREATED="1506201836707" ID="ID_1004844198" MODIFIED="1506201861755" TEXT="Backslash \[character]"/>
</node>
<node CREATED="1506201896321" ID="ID_1246540570" MODIFIED="1506479818675" TEXT="Access string values">
<node CREATED="1506201906878" ID="ID_482901722" MODIFIED="1506201924754" TEXT="new_string[3]"/>
<node CREATED="1506201926883" ID="ID_681915145" MODIFIED="1506201931277" TEXT="new_string[-2] "/>
</node>
<node CREATED="1506201965287" ID="ID_958145252" MODIFIED="1506479818676" TEXT="Lenght">
<node CREATED="1506201975690" ID="ID_767186568" MODIFIED="1506201989297" TEXT="len(new_string)"/>
</node>
<node CREATED="1506202007930" ID="ID_1163382280" MODIFIED="1506479818678" TEXT="Slicing">
<node CREATED="1506202012294" ID="ID_668795458" MODIFIED="1506202036922" TEXT="[:]"/>
<node CREATED="1506202037491" ID="ID_741533481" MODIFIED="1506202063355" TEXT="[1:7]"/>
<node CREATED="1506202045550" ID="ID_79152701" MODIFIED="1506202051632" TEXT="[2:]"/>
<node CREATED="1506202052534" ID="ID_71212906" MODIFIED="1506202070195" TEXT="[:4]"/>
</node>
<node CREATED="1506202086656" ID="ID_791170084" MODIFIED="1506479818678" TEXT="Concatenatic">
<node CREATED="1506202102988" ID="ID_798688843" MODIFIED="1506202108136" TEXT="Use +"/>
</node>
<node CREATED="1506202121822" ID="ID_914866027" MODIFIED="1506479818679" TEXT="Repeating string">
<node CREATED="1506202129546" ID="ID_1871442978" MODIFIED="1506202140365" TEXT="&quot;demo&quot;*3"/>
</node>
<node CREATED="1506202184631" ID="ID_994459388" MODIFIED="1506479818679" TEXT="Cases">
<node CREATED="1506202197526" ID="ID_668529528" MODIFIED="1506202221641" TEXT="new_string.upper()"/>
<node CREATED="1506202207525" ID="ID_709560615" MODIFIED="1506202224289" TEXT="new_string.lower()"/>
</node>
<node CREATED="1506202248537" ID="ID_14104553" MODIFIED="1506479818680" TEXT="Convertions">
<node CREATED="1506202252116" ID="ID_486280698" MODIFIED="1506202259997" TEXT="String: str(345)"/>
</node>
</node>
<node CREATED="1506201099483" ID="ID_546269871" MODIFIED="1506479818509" TEXT="Boolean">
<node CREATED="1506202296760" ID="ID_447405858" MODIFIED="1506202299496" TEXT="True or false"/>
</node>
<node CREATED="1506201103130" ID="ID_1294281158" MODIFIED="1506479818514" TEXT="List">
<node CREATED="1506202300983" ID="ID_169755689" MODIFIED="1506479818680" TEXT="Array of elemnents">
<node CREATED="1506202308658" ID="ID_327841305" MODIFIED="1506202492746" TEXT="my_list = [&apos;a&apos;, &apos;b&apos;, &apos;c&apos;]"/>
</node>
<node CREATED="1506202343042" ID="ID_1753924420" MODIFIED="1506479818681" TEXT="Accessing by index">
<node CREATED="1506202346635" ID="ID_477154860" MODIFIED="1506202354037" TEXT="my_list[2]"/>
</node>
<node CREATED="1506202369971" ID="ID_407151855" MODIFIED="1506479818682" TEXT="Lenght">
<node CREATED="1506202375907" ID="ID_476638575" MODIFIED="1506202382726" TEXT="len(my_list)"/>
</node>
<node CREATED="1506202404888" ID="ID_401546752" MODIFIED="1506479818682" TEXT="Remove items by index">
<node CREATED="1506202408952" ID="ID_1918727628" MODIFIED="1506202425587" TEXT="my_list.remove(2)"/>
</node>
<node CREATED="1506202456859" ID="ID_1608782853" MODIFIED="1506479818683" TEXT="Added an item at the end">
<node CREATED="1506202463585" ID="ID_1342234483" MODIFIED="1506202475064" TEXT="my_list.append(&apos;new&apos;)"/>
</node>
<node CREATED="1506202537295" ID="ID_1840641102" MODIFIED="1506479818684" TEXT="Sort">
<node CREATED="1506202540084" ID="ID_226656918" MODIFIED="1506202544324" TEXT="my_list.sort()"/>
<node CREATED="1506202578365" ID="ID_81063616" MODIFIED="1506202583502" TEXT="my_list.reverse()"/>
</node>
<node CREATED="1506217924857" ID="ID_313630363" MODIFIED="1506479818684" TEXT="Slicing">
<node CREATED="1506217928601" ID="ID_1224504771" MODIFIED="1506217941515" TEXT="my_list[2:4]"/>
</node>
<node CREATED="1506217992440" ID="ID_286593314" MODIFIED="1506479818685" TEXT="Delete">
<node CREATED="1506217994583" ID="ID_506718346" MODIFIED="1506217997230" TEXT="del my_list"/>
</node>
</node>
<node CREATED="1506201104960" ID="ID_870329874" MODIFIED="1506479818517" TEXT="Tuples">
<node CREATED="1506202608905" ID="ID_319313264" MODIFIED="1506479818685" TEXT="Immutable array of elements">
<node CREATED="1506202624391" ID="ID_155709659" MODIFIED="1506217817324" TEXT="my_tuple 0 = (&apos;a&apos;, &apos;b&apos;, &apos;c&apos;)"/>
</node>
<node CREATED="1506217842058" ID="ID_959056288" MODIFIED="1506479818686" TEXT="Accessing by index">
<node CREATED="1506217871281" ID="ID_342499715" MODIFIED="1506217879624" TEXT="my_tuple[3]"/>
</node>
<node CREATED="1506217943607" ID="ID_125303754" MODIFIED="1506479818686" TEXT="Slicing">
<node CREATED="1506217946485" ID="ID_61450455" MODIFIED="1506217955228" TEXT="my_tuple[:5]"/>
</node>
<node CREATED="1506217964885" ID="ID_1228664417" MODIFIED="1506479818687" TEXT="Delete">
<node CREATED="1506217971027" ID="ID_1542398049" MODIFIED="1506217974741" TEXT="del my_tuple"/>
</node>
<node CREATED="1506218023915" ID="ID_1599584607" MODIFIED="1506479818690" TEXT="Change nested elements">
<node CREATED="1506218038250" ID="ID_204439180" MODIFIED="1506479818827" TEXT="You only can change the elements inside in the tuple like a list, dictionaries, class objects, etc. In the example is the list [&apos;a&apos;,&apos;b&apos;]">
<node CREATED="1506218082164" ID="ID_945883848" MODIFIED="1506218108130" TEXT="my_tuple= (1,3,[&apos;a,&apos;b&apos;])"/>
</node>
</node>
</node>
<node CREATED="1506201106603" ID="ID_989002585" MODIFIED="1506479818520" TEXT="Dictionaries">
<node CREATED="1506218170905" ID="ID_798480510" MODIFIED="1506479818690" TEXT="Array of elements with key-value pairs">
<node CREATED="1506218189117" ID="ID_697533237" MODIFIED="1506218205890" TEXT="my_dict = {&apos;key&apos;: &apos;value&apos;}"/>
</node>
<node CREATED="1506218219022" ID="ID_371045307" MODIFIED="1506479818691" TEXT="Accessing by key">
<node CREATED="1506218225501" ID="ID_1010719199" MODIFIED="1506218240790" TEXT="my_dict[&apos;name&apos;]"/>
<node CREATED="1506218241834" ID="ID_654463187" MODIFIED="1506218249140" TEXT="my_dict.get(&apos;name&apos;)"/>
</node>
<node CREATED="1506218257086" ID="ID_1435367799" MODIFIED="1506479818692" TEXT="Add or override an entry">
<node CREATED="1506218266134" ID="ID_1235546551" MODIFIED="1506218281166" TEXT="my_dict[&apos;age&apos;] = 32"/>
</node>
<node CREATED="1506218315436" ID="ID_805134905" MODIFIED="1506479818692" TEXT="Removing entries">
<node CREATED="1506218330053" ID="ID_693374617" MODIFIED="1506218338147" TEXT="my_dict.pop(&apos;age&apos;)"/>
</node>
</node>
</node>
</node>
<node CREATED="1506218354956" ID="ID_718967521" MODIFIED="1506479818225" TEXT="Operators">
<node CREATED="1506218442504" ID="ID_1413985918" MODIFIED="1506479818377" TEXT="Mathematical">
<node CREATED="1506218369630" ID="ID_1990653729" MODIFIED="1506218376714" TEXT="Addition +"/>
<node CREATED="1506218377159" ID="ID_1232613908" MODIFIED="1506218383256" TEXT="Substraction -"/>
<node CREATED="1506218385334" ID="ID_1477755604" MODIFIED="1506218388925" TEXT="Multiplication *"/>
<node CREATED="1506218389529" ID="ID_1081598857" MODIFIED="1506218400180" TEXT="Division /"/>
<node CREATED="1506218405158" ID="ID_138135231" MODIFIED="1506218408004" TEXT="Exponenet **"/>
<node CREATED="1506218410937" ID="ID_1214092949" MODIFIED="1506218416811" TEXT="Modulo %"/>
<node CREATED="1506218420907" ID="ID_1363718352" MODIFIED="1506218432791" TEXT="Floor division //"/>
</node>
<node CREATED="1506218458154" ID="ID_938652470" MODIFIED="1506479818379" TEXT="Comparison">
<node CREATED="1506218466861" ID="ID_1416774086" MODIFIED="1506218472990" TEXT="Equal to =="/>
<node CREATED="1506218478592" ID="ID_360982100" MODIFIED="1506218482290" TEXT="Is not equal !="/>
<node CREATED="1506218485735" ID="ID_1923656809" MODIFIED="1506218490796" TEXT="Less than &lt;"/>
<node CREATED="1506218491949" ID="ID_1046714265" MODIFIED="1506218499608" TEXT="Greater than &gt;"/>
<node CREATED="1506218502898" ID="ID_272998042" MODIFIED="1506218518208" TEXT="Less equal than &lt;="/>
<node CREATED="1506218507830" ID="ID_775021959" MODIFIED="1506218522799" TEXT="Greater equal than &gt;="/>
</node>
<node CREATED="1506218526486" ID="ID_38472081" MODIFIED="1506479818380" TEXT="Logical">
<node CREATED="1506218530168" ID="ID_477904349" MODIFIED="1506218545412" TEXT="and"/>
<node CREATED="1506218538240" ID="ID_1254865844" MODIFIED="1506218539461" TEXT="or"/>
<node CREATED="1506218536469" ID="ID_743107608" MODIFIED="1506218537406" TEXT="not"/>
</node>
</node>
<node CREATED="1506218592289" ID="ID_1604366471" MODIFIED="1506479818226" TEXT="I/O">
<node CREATED="1506218604012" ID="ID_454734792" MODIFIED="1506479818381" TEXT="Input">
<node CREATED="1506218609113" ID="ID_1389496030" MODIFIED="1506218631576" TEXT="var = input(&quot;Enter your age: &quot;)"/>
</node>
<node CREATED="1506218643539" ID="ID_1237762191" MODIFIED="1506479818388" TEXT="Ouput">
<node CREATED="1506218652948" ID="ID_347674017" MODIFIED="1506301961449" TEXT="print(&quot;Something&quot;)"/>
<node CREATED="1506302093858" ID="ID_75579026" MODIFIED="1506479989276" TEXT="print(&quot;Result: &quot;, var_result)"/>
<node CREATED="1506388693249" ID="ID_649597487" MODIFIED="1506479818521" TEXT="print(&quot;{}+{}+{}=6&quot;.format(1,2,3))">
<node CREATED="1506388838780" ID="ID_1647893126" MODIFIED="1506388844479" TEXT="1+2+3=6"/>
</node>
<node CREATED="1506388752074" ID="ID_1708435129" MODIFIED="1506479818521" TEXT="print(&quot;{0}+{0}-{1}=3&quot;.format(2,1))">
<node CREATED="1506388826691" ID="ID_770066966" MODIFIED="1506388836949" TEXT="2+2-1=3"/>
</node>
<node CREATED="1506388874990" ID="ID_467788805" MODIFIED="1506479818522" TEXT="print(&quot;Hi {0!s}, Pi: {1:.5f}&quot;.format(&quot;Albert&quot;, 3.141592920))">
<node CREATED="1506388964888" ID="ID_1979691719" MODIFIED="1506388978612" TEXT="Hi Albert, Pi: 3.14159"/>
<node CREATED="1506389476389" ID="ID_1938544722" MODIFIED="1506389483676" TEXT="Info: https://pyformat.info/"/>
</node>
<node CREATED="1506389044142" ID="ID_1882978923" MODIFIED="1506479818525" TEXT="print(&quot;Hi %s, Pi: %.5f&quot; % (&quot;Albert&quot;, 3.141592920))">
<node CREATED="1506389410125" ID="ID_1661638804" MODIFIED="1506389413163" TEXT="Hi Albert, Pi: 3.14159"/>
</node>
</node>
</node>
<node CREATED="1506389606943" ID="ID_765482185" MODIFIED="1506479818227" TEXT="Decision making">
<node CREATED="1506389622257" ID="ID_793648676" MODIFIED="1506389796891" TEXT="if:"/>
<node CREATED="1506389676486" ID="ID_218717159" MODIFIED="1506389840856" TEXT="if: --- else: ---"/>
<node CREATED="1506389626295" ID="ID_496463793" MODIFIED="1506389845037" TEXT="if: --- elif: ---"/>
<node CREATED="1506389658701" ID="ID_1416203791" MODIFIED="1506389851323" TEXT="if: --- elif: --- else: ---"/>
</node>
<node CREATED="1506389708255" ID="ID_157780584" MODIFIED="1506479818230" TEXT="Flow control">
<node CREATED="1506389718286" ID="ID_918512485" MODIFIED="1506479818389" TEXT="For loop">
<node CREATED="1506389730080" ID="ID_1087603916" MODIFIED="1506389794607" TEXT="for [val] in [sequence]:"/>
</node>
<node CREATED="1506389767467" ID="ID_1189784697" MODIFIED="1506479818389" TEXT="While loop">
<node CREATED="1506389784543" ID="ID_1342298600" MODIFIED="1506389792550" TEXT="while [condition]:"/>
</node>
<node CREATED="1506389990073" ID="ID_80582917" MODIFIED="1506479818392" TEXT="break">
<node CREATED="1506390028241" ID="ID_73115629" MODIFIED="1506390092749" STYLE="fork" TEXT="It finish the loop statement and pass the control to the next statement"/>
</node>
<node CREATED="1506390103887" ID="ID_1075489049" MODIFIED="1506479818394" TEXT="continue">
<node CREATED="1506390111754" ID="ID_40912787" MODIFIED="1506390150457" TEXT="Skip the current iteration and pass to the next"/>
</node>
<node CREATED="1506390219743" ID="ID_563557605" MODIFIED="1506479818397" TEXT="pass">
<node CREATED="1506390223854" ID="ID_408955960" MODIFIED="1506390248841" TEXT="It&apos;s a null operation nomally used in empty functions"/>
</node>
</node>
<node CREATED="1506390276849" ID="ID_1483337015" MODIFIED="1506479818234" TEXT="Functions">
<node CREATED="1506390304631" ID="ID_611677994" MODIFIED="1506480021720" TEXT="#It&apos;s a group of statements which do a specific action"/>
<node CREATED="1506390408760" ID="ID_923173181" MODIFIED="1506479818398" TEXT="Built-in functions examples">
<node CREATED="1506390425325" ID="ID_132119675" MODIFIED="1506390451040" TEXT="abs() #Mathematical abs"/>
<node CREATED="1506390439745" ID="ID_1747250176" MODIFIED="1506390446892" TEXT="dict() #Create a new dict"/>
<node CREATED="1506390458714" ID="ID_1588302782" MODIFIED="1506390480302" TEXT="id() #Return the object&apos;s identity"/>
<node CREATED="1506390488319" ID="ID_28553056" MODIFIED="1506390502754" TEXT="input() #Reads user input"/>
<node CREATED="1506390505543" ID="ID_237172361" MODIFIED="1506390522949" TEXT="len() #Return the lenght or size"/>
</node>
<node CREATED="1506390537305" ID="ID_1830904462" MODIFIED="1506479818400" TEXT="user-define functions">
<node CREATED="1506390547924" ID="ID_1155848028" MODIFIED="1506390659896" TEXT="def function_name(parameters):"/>
<node CREATED="1506390570006" ID="ID_162024581" MODIFIED="1506479818528" TEXT="&quot;&quot;&quot;docstrings&quot;&quot;&quot;">
<node CREATED="1506390577436" ID="ID_1727320548" MODIFIED="1506390697859" TEXT="#Add documentation to your function"/>
</node>
<node CREATED="1506390650611" ID="ID_795830961" MODIFIED="1506390656196" TEXT="statements"/>
<node CREATED="1506390666543" ID="ID_1432277334" MODIFIED="1506479818529" TEXT="return [statements]">
<node CREATED="1506390682214" ID="ID_1786050756" MODIFIED="1506390695215" TEXT="#Return some value or object"/>
<node CREATED="1506390742347" ID="ID_1545350439" MODIFIED="1506390756007" TEXT="#Returns None per default"/>
</node>
</node>
</node>
<node CREATED="1506390791119" ID="ID_1278064947" MODIFIED="1506479818238" TEXT="Modules">
<node CREATED="1506390874357" ID="ID_1278349522" MODIFIED="1506480044412" TEXT="#It&apos;s a file which contains statements, definitions, and codes. Promote the code reusability."/>
<node CREATED="1506390992733" ID="ID_494445146" MODIFIED="1506479818401" TEXT="Features">
<node CREATED="1506390997147" ID="ID_1209759415" MODIFIED="1506391028409" TEXT="Organization"/>
<node CREATED="1506391028889" ID="ID_596366803" MODIFIED="1506391040609" TEXT="Convert the code into small pices"/>
<node CREATED="1506391061388" ID="ID_815764554" MODIFIED="1506391065617" TEXT="More managable files"/>
</node>
<node CREATED="1506391206267" ID="ID_1316218891" MODIFIED="1506479818402" TEXT="Kind of">
<node CREATED="1506391197546" ID="ID_1822367393" MODIFIED="1506391205356" TEXT="Built-in"/>
<node CREATED="1506391217101" ID="ID_354243180" MODIFIED="1506479818532" TEXT="User-define">
<node CREATED="1506391229565" ID="ID_179801322" MODIFIED="1506391262483" TEXT="create a file &apos;calculator.py&apos; with add and sub methods"/>
<node CREATED="1506391235848" ID="ID_1134046754" MODIFIED="1506391242616" TEXT="import calculator"/>
</node>
</node>
<node CREATED="1506391110061" ID="ID_943868586" MODIFIED="1506479818405" TEXT="Syntaxis">
<node CREATED="1506391164039" ID="ID_443082467" MODIFIED="1506391171083" TEXT="import [module_name]"/>
<node CREATED="1506391272757" ID="ID_539727979" MODIFIED="1506391290607" TEXT="from [module] import [sub_module]"/>
<node CREATED="1506391463449" ID="ID_843505879" MODIFIED="1506479818533" TEXT="dir([module_name])">
<node CREATED="1506391478083" ID="ID_628850841" MODIFIED="1506391546110" TEXT="#Show methods and attributes"/>
</node>
<node CREATED="1506391721791" ID="ID_196225435" MODIFIED="1506479818535" TEXT="#Import from other directory">
<node CREATED="1506391734449" ID="ID_1724895476" MODIFIED="1506391737611" TEXT="import os"/>
<node CREATED="1506391741918" ID="ID_1934783491" MODIFIED="1506391754504" TEXT="os.chdir(&quot;[path]&quot;)"/>
<node CREATED="1506391756145" ID="ID_1059989646" MODIFIED="1506391764497" TEXT="import [module_name]"/>
</node>
<node CREATED="1506391773320" ID="ID_1807534000" MODIFIED="1506479818536" TEXT="#Show the current working directory">
<node CREATED="1506391792761" ID="ID_1102118912" MODIFIED="1506391804555" TEXT="os.getcwd()"/>
</node>
</node>
</node>
<node CREATED="1506391816950" ID="ID_1548389819" MODIFIED="1506479818240" TEXT="Errors and Exceptions">
<node CREATED="1506391889888" ID="ID_141580563" MODIFIED="1506479818407" TEXT="Syntaxis errors">
<node CREATED="1506391903160" ID="ID_28397937" MODIFIED="1506391947065" TEXT="Occurs when we have a wrong syntax in the code"/>
</node>
<node CREATED="1506391895900" ID="ID_1416098003" MODIFIED="1506479818409" TEXT="Runtime errors">
<node CREATED="1506394202524" ID="ID_203230859" MODIFIED="1506479818546" TEXT="Definitions">
<node CREATED="1506394206878" ID="ID_933632179" MODIFIED="1506394207980" TEXT="An error that occurs during runtime is calling an exception."/>
<node CREATED="1506394210969" ID="ID_1322767998" MODIFIED="1506394211482" TEXT="The unmanaged or unsolved runtime errors can cause a program crash or terminated unexpectedly."/>
<node CREATED="1506394214456" ID="ID_1052027857" MODIFIED="1506394214872" TEXT="Python created an exception object when an error occurs and display a trackback to error."/>
</node>
<node CREATED="1506394258955" ID="ID_1657290850" MODIFIED="1506479818552" TEXT="Syntax">
<node CREATED="1506394264733" ID="ID_1963693704" MODIFIED="1506479818695" TEXT="try: --- expect [error_type]: ---">
<node CREATED="1506394378638" ID="ID_1983531890" MODIFIED="1506394406471" TEXT="Run the statements inside of try and if occurs an error it catch in expected [error_type]"/>
</node>
<node CREATED="1506394333944" ID="ID_1161960045" MODIFIED="1506479818697" TEXT="try: --- expect [error_type]: --- else: ---">
<node CREATED="1506394409267" ID="ID_1784883683" MODIFIED="1506394426400" TEXT="If we don&apos;t want to put every error_type we can use else"/>
</node>
<node CREATED="1506394344647" ID="ID_1724109903" MODIFIED="1506479818703" TEXT="try: --- expect [error_type]: --- else: --- finally: ---">
<node CREATED="1506394430262" ID="ID_1989272956" MODIFIED="1506394494010" TEXT="If some error occurs finally always execute this statements"/>
</node>
</node>
</node>
</node>
<node CREATED="1506650871088" ID="ID_776602041" MODIFIED="1506650934561" TEXT="Regular expressions">
<node CREATED="1506650944347" ID="ID_1349219822" MODIFIED="1506651128298" TEXT="#This is a completely different subject in the programming world which means you need to learn all about it, we only teach how to implement this in Python"/>
<node CREATED="1506651209317" ID="ID_1974713627" MODIFIED="1506651300521" STYLE="fork" TEXT="#It is used to search pattern"/>
<node CREATED="1506651307259" ID="ID_1502507693" MODIFIED="1506651333727" TEXT="Syntax">
<node CREATED="1506651133135" ID="ID_415303922" MODIFIED="1506651148049" TEXT="import re #Import the module"/>
<node CREATED="1506651366019" ID="ID_1541929029" MODIFIED="1506652396896" TEXT="pattern = re.compile(&apos;[regular_expression]&apos;)">
<node CREATED="1506651483740" ID="ID_1683796919" MODIFIED="1506652343871" TEXT="#Is strongly recommended to save the regular expression in a variable otherwise it has to be computed every time it was called that means consume more resources"/>
<node CREATED="1506652369487" ID="ID_885153274" MODIFIED="1506652404207" TEXT="pattern = r&apos;[regular_expression]&apos;"/>
</node>
<node CREATED="1506651414825" ID="ID_1735303990" MODIFIED="1506651460050" TEXT="pattern.match(&quot;raw text which contains the patterns&quot;)"/>
</node>
<node CREATED="1506652481696" ID="ID_549153647" MODIFIED="1506652487820" TEXT="Characters of patterns">
<node CREATED="1506652489522" ID="ID_1316804786" MODIFIED="1506652493162" TEXT="Normal characters">
<node CREATED="1506652496145" ID="ID_1188832037" MODIFIED="1506652500812" TEXT="Digits 0-9"/>
<node CREATED="1506652501460" ID="ID_1377837992" MODIFIED="1506652514341" TEXT="Alphabetic a-z|A-Z"/>
</node>
<node CREATED="1506652800261" ID="ID_1220457190" MODIFIED="1506652807568" TEXT="Character classes">
<node CREATED="1506652831892" ID="ID_982399944" MODIFIED="1506652888792" TEXT="#Special characters which do special actions"/>
<node CREATED="1506653296542" ID="ID_127819913" MODIFIED="1506653346372" TEXT="\[n],\A,\b,\B,\d,\D,\s,\S,\w,\W,\Z"/>
<node CREATED="1506653261469" ID="ID_109752521" MODIFIED="1506653262298" TEXT="https://www.regular-expressions.info/refcharclass.html"/>
</node>
<node CREATED="1506653406662" ID="ID_183490809" MODIFIED="1506653751754" TEXT="Metacharacters">
<node CREATED="1506653421702" ID="ID_119038641" MODIFIED="1506653465605" TEXT=". ^ $ * + ? { } [ ] \ | ( )"/>
<node CREATED="1506653641312" ID="ID_1693847969" MODIFIED="1506653642210" TEXT="https://www.regular-expressions.info/refrepeat.html"/>
</node>
</node>
<node CREATED="1506652537218" ID="ID_225905950" MODIFIED="1506652542758" TEXT="Parameters">
<node CREATED="1506652549675" ID="ID_1882263361" MODIFIED="1506652554161" TEXT="re.LOCALE">
<node CREATED="1506652564591" ID="ID_41060506" MODIFIED="1506652594301" TEXT="#Accept characters with the local region for example accents">
<node CREATED="1506652684353" ID="ID_54227513" MODIFIED="1506652686444" TEXT="Example">
<node CREATED="1506652689635" ID="ID_273765168" MODIFIED="1506652720309" TEXT="pattern = re.compile(&apos;[a-zA-Z]&apos;, re.LOCALE)"/>
<node CREATED="1506652721253" ID="ID_1583458060" MODIFIED="1506652787096" TEXT="#Match [&quot;M&#xe9;xico&quot;,&quot;Austria&quot;,&quot;K&#xf6;ln&quot;]"/>
</node>
</node>
</node>
</node>
</node>
<node CREATED="1506475640816" ID="ID_1597385216" MODIFIED="1506479818243" TEXT="Object-Oriented Programming">
<node CREATED="1506476125704" ID="ID_1078070327" MODIFIED="1506479818413" TEXT="Definition">
<node CREATED="1506476170449" ID="ID_70225427" MODIFIED="1506480147900" TEXT="Create abstractas schemes of the real world to run modeling functions in the computer"/>
<node CREATED="1506476132487" ID="ID_310281676" MODIFIED="1506476662835" TEXT="Create your owns data structures to extend more complex data type"/>
</node>
<node CREATED="1506476774992" ID="ID_1883949167" MODIFIED="1506479818416" TEXT="Common">
<node CREATED="1506476785628" ID="ID_1040579423" MODIFIED="1506479818553" TEXT="General">
<node CREATED="1506476790676" ID="ID_878822736" MODIFIED="1506476818242" TEXT="Class Room:"/>
</node>
<node CREATED="1506476926164" ID="ID_101348294" MODIFIED="1506479818554" TEXT="Attributes / Vars">
<node CREATED="1506476934232" ID="ID_1214425164" MODIFIED="1506479818707" TEXT="Public">
<node CREATED="1506476953988" ID="ID_561788122" MODIFIED="1506476977985" TEXT="attr_name = 0"/>
</node>
<node CREATED="1506476938485" ID="ID_77369340" MODIFIED="1506479818708" TEXT="Private">
<node CREATED="1506476963364" ID="ID_990377981" MODIFIED="1506476981080" TEXT="_attr_name = 0"/>
</node>
</node>
<node CREATED="1506477168405" ID="ID_1391692164" MODIFIED="1506479818555" TEXT="Initialize">
<node CREATED="1506477197909" ID="ID_1772438904" MODIFIED="1506479818711" TEXT="def __init__(self,[parameters]):">
<node CREATED="1506477209856" ID="ID_139649831" MODIFIED="1506477293641" TEXT="#When the object/class is created, this is the first method which executes"/>
</node>
<node CREATED="1506477318456" ID="ID_1359360221" MODIFIED="1506477331860" TEXT="self.var_name = &quot;something&quot;"/>
</node>
<node CREATED="1506477378163" ID="ID_605787415" MODIFIED="1506479818556" TEXT="Destructor">
<node CREATED="1506477387152" ID="ID_1433739074" MODIFIED="1506479818715" TEXT="def __del__(self):">
<node CREATED="1506477400891" ID="ID_1647030257" MODIFIED="1506477452811" TEXT="#It executes before the object is destroyed"/>
</node>
</node>
<node CREATED="1506477005703" ID="ID_1130175818" MODIFIED="1506479818557" TEXT="Instancate a Class">
<node CREATED="1506477021537" ID="ID_492672971" MODIFIED="1506477035584" TEXT="my_hotel = Hotel()"/>
</node>
</node>
<node CREATED="1506477629844" ID="ID_868372461" MODIFIED="1506479818418" TEXT="Deriving class">
<node CREATED="1506477825560" ID="ID_618369336" MODIFIED="1506479818560" TEXT="Definitions">
<node CREATED="1506477677675" ID="ID_1304378576" MODIFIED="1506477701690" TEXT="#Is a class created on base of other class"/>
<node CREATED="1506477771080" ID="ID_1612745590" MODIFIED="1506477796274" TEXT="#This deriving class inherits all attributes and methods from the base class"/>
<node CREATED="1506477720383" ID="ID_1649909753" MODIFIED="1506479818717" TEXT="#The base class have differents names:">
<node CREATED="1506477738407" ID="ID_1790171222" MODIFIED="1506477742275" TEXT="base class"/>
<node CREATED="1506477742974" ID="ID_1189727031" MODIFIED="1506477745242" TEXT="parent class"/>
<node CREATED="1506477750563" ID="ID_1468511138" MODIFIED="1506477752830" TEXT="upper class"/>
<node CREATED="1506477753561" ID="ID_11714790" MODIFIED="1506477755917" TEXT="super class"/>
</node>
</node>
<node CREATED="1506477864579" ID="ID_1125385141" MODIFIED="1506479818561" TEXT="Sintaxis">
<node CREATED="1506476830532" ID="ID_238560909" MODIFIED="1506479818718" TEXT="Class Hotel(Building):">
<node CREATED="1506476853170" ID="ID_1214260940" MODIFIED="1506477230272" TEXT="#Class inherited"/>
</node>
</node>
</node>
<node CREATED="1506477852730" ID="ID_631531881" MODIFIED="1506479818422" TEXT="Overwrite methods">
<node CREATED="1506477911152" ID="ID_351817155" MODIFIED="1506477937420" TEXT="#You can overloading Built-in or user-dfined methods"/>
<node CREATED="1506477939676" ID="ID_880657728" MODIFIED="1506477950923" TEXT="def __str__(self):"/>
<node CREATED="1506477953828" ID="ID_795173412" MODIFIED="1506477966119" TEXT="print(&quot;I&apos;m overloading this method&quot;)"/>
<node CREATED="1506478072028" ID="ID_526232455" MODIFIED="1506478074041" TEXT="#Then"/>
<node CREATED="1506478075073" ID="ID_1496781442" MODIFIED="1506478095011" TEXT="my_hotel = Hotel()"/>
<node CREATED="1506478095712" ID="ID_1970674535" MODIFIED="1506478107104" TEXT="&gt;&gt;&gt; I&apos;m overloading this method"/>
</node>
<node CREATED="1506477986546" ID="ID_786309843" MODIFIED="1506479818424" TEXT="Operator overloading">
<font NAME="FreeMono" SIZE="23"/>
<node CREATED="1506479075090" ID="ID_139961072" MODIFIED="1506479818564" TEXT="Definition">
<node CREATED="1506478202717" ID="ID_1211913713" MODIFIED="1506478322028" TEXT="#You are able to compare, add, subs, etc., the specific attributes between classes"/>
</node>
<node CREATED="1506479078635" ID="ID_146093216" MODIFIED="1506479818566" TEXT="Sintaxis">
<node CREATED="1506478141258" ID="ID_1805226983" MODIFIED="1506478164587" TEXT="def __eq__(self, other):"/>
<node CREATED="1506478173963" ID="ID_441368764" MODIFIED="1506478197696" TEXT="return self.getName == other.getName"/>
<node CREATED="1506479110464" ID="ID_235976338" MODIFIED="1506479114505" TEXT="#Then"/>
<node CREATED="1506479115115" ID="ID_919303505" MODIFIED="1506479136914" TEXT="if hotel1 == hotel2: ---"/>
</node>
<node CREATED="1506478395400" ID="ID_1138359326" MODIFIED="1506479818571" TEXT="Magic operators">
<node CREATED="1506479156785" ID="ID_888302463" MODIFIED="1506479257304" TEXT="#Python has a lot of magic operators to replace the existed operators"/>
<node CREATED="1506478666136" ID="ID_1895641973" MODIFIED="1506478666853" TEXT="https://www.python-course.eu/python3_magic_methods.php"/>
</node>
</node>
</node>
</node>
<node CREATED="1506478558483" ID="ID_1392149437" MODIFIED="1506479818082" POSITION="right" TEXT="Sources">
<node CREATED="1506478566358" ID="ID_1836483267" MODIFIED="1506480720314" TEXT="Tutorials">
<node CREATED="1506478570454" ID="ID_356745240" MODIFIED="1506478582514" TEXT="https://www.python-course.eu/"/>
<node CREATED="1506480658506" ID="ID_1534576075" MODIFIED="1506480659404" TEXT="https://docs.python.org/3/"/>
</node>
<node CREATED="1506479485662" ID="ID_305857905" MODIFIED="1506479818244" TEXT="print.format">
<node CREATED="1506479494291" ID="ID_1778404472" MODIFIED="1506479495005" TEXT="https://pyformat.info/"/>
</node>
<node CREATED="1506653269050" ID="ID_429115515" MODIFIED="1506653274642" TEXT="RegEx python">
<node CREATED="1506653275506" ID="ID_568823562" MODIFIED="1506653661861" TEXT="https://www.regular-expressions.info/refcharacters.html"/>
</node>
</node>
</node>
</map>
